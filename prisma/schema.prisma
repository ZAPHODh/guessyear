

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DB_PRISMA_URL")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model EmailVerificationCode {
  id        String   @id @default(cuid())
  code      String
  userId    String
  email     String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model User {
  id                     String                  @id @unique @default(cuid())
  name                   String?
  email                  String?                 @unique
  emailVerified          Boolean?                @default(false)
  picture                String?
  githubId               Int?                    @unique
  googleId String? @unique
  sessions               Session[]
  emailVerificationCodes EmailVerificationCode[]
  dailyGameProgress      DailyGameProgress[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DailyImage {
  id          String   @id @default(cuid())
  cloudinaryUrl String
  year        Int
  description String?
  date        DateTime @unique @db.Date
  gameProgress DailyGameProgress[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model DailyGameProgress {
  id          String     @id @default(cuid())
  userId      String?
  user        User?      @relation(references: [id], fields: [userId], onDelete: Cascade)
  imageId     String
  image       DailyImage @relation(references: [id], fields: [imageId], onDelete: Cascade)
  attempts    Int        @default(0)
  completed   Boolean    @default(false)
  won         Boolean    @default(false)
  date        DateTime   @db.Date
  
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@unique([userId, imageId])
  @@unique([userId, date])
}

